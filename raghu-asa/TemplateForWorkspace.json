{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "raghu-asa"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureBlobStorage2_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage2'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDataLakeStorage2_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage2'"
		},
		"linkedService1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'linkedService1'"
		},
		"raghu-asa-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'raghu-asa-WorkspaceDefaultSqlServer'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=tcp:raghu-asa.sql.azuresynapse.net,1433;Initial Catalog=@{linkedService().DBName}"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raghuadls24.dfs.core.windows.net/"
		},
		"AzureDataLakeStorage2_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raghuadls24.dfs.core.windows.net/"
		},
		"linkedService1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raghuadls24.dfs.core.windows.net/"
		},
		"raghu-asa-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://raghuadls.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/ScaleDW')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Bearer Token",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://login.microsoftonline.com/microsoft.onmicrosoft.com/oauth2/token",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/x-www-form-urlencoded"
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://management.azure.com/&client_id=',variables('ClientID'),\n'&client_secret=',encodeUriComponent(variables('ClientSecret')))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Get DB Status",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Bearer Token",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/11c799e7-b509-4f0c-88c3-e1cafb8ad7c9/resourceGroups/raghurepro/providers/Microsoft.Synapse/workspaces/raghu-asa/sqlPools/raghuadw?api-version=2021-06-01",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "GET",
							"headers": {
								"Content-Type": "application/json",
								"Authorization": {
									"value": "@concat('Bearer ', activity('Bearer Token').output.access_token)",
									"type": "Expression"
								}
							},
							"body": {
								"value": "{\n  \"location\": \"East US\",\n  \"tags\": {},\n  \"sku\": {\n    \"tier\": \"\",\n    \"name\": \"DW100c\"\n  },\n  \"properties\": {\n    \"maxSizeBytes\": 0,\n    \"collation\": \"\",\n    \"restorePointInTime\": \"1970-01-01T00:00:00.000Z\"\n  }\n}\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Pause DB",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Get DB Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://management.azure.com/subscriptions/11c799e7-b509-4f0c-88c3-e1cafb8ad7c9/resourceGroups/raghurepro/providers/Microsoft.Synapse/workspaces/raghu-asa/sqlPools/pause?api-version=2021-06-01",
							"connectVia": {
								"referenceName": "AutoResolveIntegrationRuntime",
								"type": "IntegrationRuntimeReference"
							},
							"method": "POST",
							"headers": {
								"Content-Type": "application/json",
								"Authorization": {
									"value": "@concat('Bearer ', activity('Bearer Token').output.access_token)",
									"type": "Expression"
								}
							},
							"body": {
								"value": "@concat('grant_type=client_credentials&resource=https://management.azure.com/&client_id=',variables('ClientID'),\n'&client_secret=',encodeUriComponent(variables('ClientSecret')))",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"test": {
						"type": "string",
						"defaultValue": "123"
					}
				},
				"variables": {
					"ClientID": {
						"type": "String",
						"defaultValue": "f9a1b24a-d23f-4753-b980-8083e1336f0b"
					},
					"ClientSecret": {
						"type": "String",
						"defaultValue": "erc8Q~JOeyySuFyLLQAYYHSNLl-WzJ-bQ_t0ncF4"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-10T12:30:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/DelimitedText1')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Repro.csv",
						"fileSystem": "raghutest"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CreatedDateTime",
						"type": "String"
					},
					{
						"name": "IncidentId",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ClosedDateTime",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureDataLakeStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Sink')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "test",
						"container": "raghutestcontainer"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "IntegrationRuntime1",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/IntegrationRuntime1')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureBlobStorage2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage2_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AzureDataLakeStorage2')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage2_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage2_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/linkedService1')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('linkedService1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('linkedService1_accountKey')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/raghu-asa-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('raghu-asa-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/raghu-asa-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('raghu-asa-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Scale Up Trigger')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "ScaleDW",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Month",
						"interval": 1,
						"startTime": "2022-10-10T12:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"monthDays": [
								31
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/pipelines/ScaleDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Trigger 1')]",
			"type": "Microsoft.Synapse/workspaces/triggers",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2022-07-05T09:30:00Z",
						"endTime": "2022-10-04T00:44:46Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime1')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime2')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/IntegrationRuntime3')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "East US",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RaghuIR')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dataflow1')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Sink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          CreatedDateTime as timestamp 'yyyy-MM-dd\\'T\\'HH:mm:ss.SSS\\'Z\\'',",
						"          IncidentId as string,",
						"          State as string,",
						"          ClosedDateTime as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     mapColumn(",
						"          CreatedDateTime,",
						"          IncidentId,",
						"          State,",
						"          ClosedDateTime",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/DelimitedText1')]",
				"[concat(variables('workspaceId'), '/datasets/Sink')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "Testdb",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "IF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'SynapseDelimitedTextFormat') \n\tCREATE EXTERNAL FILE FORMAT [SynapseDelimitedTextFormat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\tFIELD_TERMINATOR = ',',\n\t\t\tSTRING_DELIMITER='\"',\n\t\t\t FIRST_ROW=2\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raghufs_raghuadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raghufs_raghuadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://raghufs@raghuadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE test.csv (\n\t[Postcode] nvarchar(4000),\n\t[In Use] nvarchar(4000),\n\t[Latitude] DECIMAL(9,6),\n\t[Longitude] DECIMAL(9,6),\n\t[Easting] bigint,\n\t[Northing] bigint,\n\t[Grid Ref] nvarchar(4000),\n\t[County] nvarchar(4000),\n\t[District] nvarchar(4000),\n\t[Ward] nvarchar(4000),\n\t[District Code] nvarchar(4000),\n\t[Ward Code] nvarchar(4000),\n\t[Country] nvarchar(4000),\n\t[County Code] nvarchar(4000),\n\t[Constituency] nvarchar(4000),\n\t[Introduced] nvarchar(4000),\n\t[Terminated] nvarchar(4000),\n\t[Parish] nvarchar(4000),\n\t[National Park] nvarchar(4000),\n\t[Population] nvarchar(4000),\n\t[Households] nvarchar(4000),\n\t[Built up area] nvarchar(4000),\n\t[Built up sub-division] nvarchar(4000),\n\t[Lower layer super output area] nvarchar(4000),\n\t[Rural/urban] nvarchar(4000),\n\t[Region] nvarchar(4000),\n\t[Altitude] bigint,\n\t[London zone] nvarchar(4000),\n\t[LSOA Code] nvarchar(4000),\n\t[Local authority] nvarchar(4000),\n\t[MSOA Code] nvarchar(4000),\n\t[Middle layer super output area] nvarchar(4000),\n\t[Parish Code] nvarchar(4000),\n\t[Census output area] nvarchar(4000),\n\t[Constituency Code] nvarchar(4000),\n\t[Index of Multiple Deprivation] bigint,\n\t[Quality] bigint,\n\t[User Type] bigint,\n\t[Last updated] nvarchar(4000),\n\t[Nearest station] nvarchar(4000),\n\t[Distance to station] float,\n\t[Postcode area] nvarchar(4000),\n\t[Postcode district] nvarchar(4000),\n\t[Police force] nvarchar(4000),\n\t[Water company] nvarchar(4000),\n\t[Plus Code] nvarchar(4000),\n\t[Average Income] nvarchar(4000),\n\t[Sewage Company] nvarchar(4000),\n\t[Travel To Work Area] nvarchar(4000),\n\t[ITL level 2] nvarchar(4000),\n\t[ITL level 3] nvarchar(4000),\n\t[UPRNs] nvarchar(4000),\n\t[Distance to sea] float\n\t)\n\tWITH (\n\tLOCATION = 'postcodes_test.csv',\n\tDATA_SOURCE = [raghufs_raghuadls_dfs_core_windows_net],\n\tFILE_FORMAT = [SynapseDelimitedTextFormat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM test.csv\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "raghuadw",
						"poolName": "raghuadw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "\nIF NOT EXISTS (SELECT * FROM sys.external_file_formats WHERE name = 'csvformat') \n\tCREATE EXTERNAL FILE FORMAT [csvformat] \n\tWITH ( FORMAT_TYPE = DELIMITEDTEXT ,\n\t       FORMAT_OPTIONS (\n\t\t\t FIELD_TERMINATOR = ',',\n\t\t\t STRING_DELIMITER='\"',\n\t\t\t FIRST_ROW=2\n\t\t\t))\nGO\n\nIF NOT EXISTS (SELECT * FROM sys.external_data_sources WHERE name = 'raghufs_raghuadls_dfs_core_windows_net') \n\tCREATE EXTERNAL DATA SOURCE [raghufs_raghuadls_dfs_core_windows_net] \n\tWITH (\n\t\tLOCATION = 'abfss://raghufs@raghuadls.dfs.core.windows.net' \n\t)\nGO\n\nCREATE EXTERNAL TABLE test.csv3 (\n\t[Postcode] nvarchar(4000),\n\t[In Use] nvarchar(4000),\n\t[Latitude] DECIMAL(9,6),\n\t[Longitude] DECIMAL(9,6),\n\t[Easting] bigint,\n\t[Northing] bigint,\n\t[Grid Ref] nvarchar(4000),\n\t[County] nvarchar(4000),\n\t[District] nvarchar(4000),\n\t[Ward] nvarchar(4000),\n\t[District Code] nvarchar(4000),\n\t[Ward Code] nvarchar(4000),\n\t[Country] nvarchar(4000),\n\t[County Code] nvarchar(4000),\n\t[Constituency] nvarchar(4000),\n\t[Introduced] nvarchar(4000),\n\t[Terminated] nvarchar(4000),\n\t[Parish] nvarchar(4000),\n\t[National Park] nvarchar(4000),\n\t[Population] nvarchar(4000),\n\t[Households] nvarchar(4000),\n\t[Built up area] nvarchar(4000),\n\t[Built up sub-division] nvarchar(4000),\n\t[Lower layer super output area] nvarchar(4000),\n\t[Rural/urban] nvarchar(4000),\n\t[Region] nvarchar(4000),\n\t[Altitude] bigint,\n\t[London zone] nvarchar(4000),\n\t[LSOA Code] nvarchar(4000),\n\t[Local authority] nvarchar(4000),\n\t[MSOA Code] nvarchar(4000),\n\t[Middle layer super output area] nvarchar(4000),\n\t[Parish Code] nvarchar(4000),\n\t[Census output area] nvarchar(4000),\n\t[Constituency Code] nvarchar(4000),\n\t[Index of Multiple Deprivation] bigint,\n\t[Quality] bigint,\n\t[User Type] bigint,\n\t[Last updated] nvarchar(4000),\n\t[Nearest station] nvarchar(4000),\n\t[Distance to station] float,\n\t[Postcode area] nvarchar(4000),\n\t[Postcode district] nvarchar(4000),\n\t[Police force] nvarchar(4000),\n\t[Water company] nvarchar(4000),\n\t[Plus Code] nvarchar(4000),\n\t[Average Income] nvarchar(4000),\n\t[Sewage Company] nvarchar(4000),\n\t[Travel To Work Area] nvarchar(4000),\n\t[ITL level 2] nvarchar(4000),\n\t[ITL level 3] nvarchar(4000),\n\t[UPRNs] nvarchar(4000),\n\t[Distance to sea] float\n\t)\n\tWITH (\n\tLOCATION = 'postcodes_test.csv',\n\tDATA_SOURCE = [raghufs_raghuadls_dfs_core_windows_net],\n\tFILE_FORMAT = [csvformat]\n\t)\nGO\n\n\nSELECT TOP 100 * FROM test.csv3\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "raghuadw",
						"poolName": "raghuadw"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/LakeDB')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "LakeDB",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://raghufs@raghuadls.dfs.core.windows.net/LakeDB",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "raghu-asa-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "eed9aaf0-4e89-4e85-8f77-11a394353250"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Testdb')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Testdb",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://raghufs@raghuadls.dfs.core.windows.net/Testdb",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "raghu-asa-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "1fba60d7-9ca0-4daa-a493-477292ed1d1c"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/testsp')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "testsp",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://raghufs@raghuadls.dfs.core.windows.net/testsp",
								"Properties": {
									"FormatType": "csv",
									"LinkedServiceName": "raghu-asa-WorkspaceDefaultStorage"
								}
							},
							"PublishStatus": "PUBLISHED",
							"ObjectVersion": 1,
							"ObjectId": "275b4efe-913a-4855-bdac-39a84be5edb6"
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/raghuadw')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/RaghuTestSpark')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 15
				},
				"autoScale": {
					"enabled": true,
					"maxNodeCount": 10,
					"minNodeCount": 3
				},
				"nodeCount": 0,
				"nodeSize": "Medium",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": true,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}